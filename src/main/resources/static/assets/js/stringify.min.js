"use strict";

exports.__esModule = true;
exports["default"] = void 0;
var beginFloat = '~begin~float~';
var endFloat = '~end~float~';

var StringifyWithFloats = function StringifyWithFloats(config) {
    if (config === void 0) {
        config = {};
    }

    return function (inputValue, inputReplacer, space) {
        var inputReplacerIsFunction = typeof inputReplacer === 'function';
        var isFirstIteration = true;

        var jsonReplacer = function jsonReplacer(key, val) {
            if (isFirstIteration) {
                isFirstIteration = false;
                return inputReplacerIsFunction ? inputReplacer(key, val) : val;
            }

            var value;

            if (inputReplacerIsFunction) {
                value = inputReplacer(key, val);
            } else if (Array.isArray(inputReplacer)) {
                // remove the property if it is not included in the inputReplacer array
                value = inputReplacer.indexOf(key) !== -1 ? val : undefined;
            } else {
                value = val;
            }

            var forceFloat = config[key] === 'float' && (value || value === 0) && typeof value === 'number' && !value.toString().toLowerCase().includes('e');
            return forceFloat ? "" + beginFloat + value + endFloat : value;
        };

        var json = JSON.stringify(inputValue, jsonReplacer, space);

        var regexReplacer = function regexReplacer(match, num) {
            return num.includes('.') || Number.isNaN(num) ? num : num + ".0";
        };

        var re = new RegExp("\"" + beginFloat + "(.+?)" + endFloat + "\"", 'g');
        return json.replace(re, regexReplacer);
    };
};

var _default = StringifyWithFloats;
exports["default"] = _default;